import "./WatchBird.js";
import { EntityBase, Entity, Player, SimulatedPlayer, YoniEntity, YoniPlayer, YoniSimulatedPlayer } from "./entity.js";
import { Minecraft, Gametest, MinecraftGui, VanillaWorld, VanillaScoreboard, VanillaEvents, dim, runTask } from "./basis.js";
import { Logger, log, console } from "./util/Logger.js";
import { World } from "./world.js";
import { Command } from "./command.js";
import { EventListener, EventTypes, EventSignal, events } from "./event.js";
import { Scoreboard, Entry, Objective } from "./scoreboard.js";
import { Schedule, YoniScheduler } from "./schedule.js";
import * as YoniUtils from "./util/utils.js";
import { ChatCommand } from "./util/ChatCommand.js";
import { Location, ILocation, Vector3, DimensionLikeValue } from "./Location.js";
import { Dimension, YoniDimension } from "./dimension.js";
import { system } from "./system.js";
import { ObjectUtils } from "./lib/ObjectUtils.js";
import { ScoreboardAccessor } from "./scoreboard/ScoreboardAccessor.js";
import { EntityValue } from "./entity/EntityTypeDefs.js";
import { EntryValueType, EntryType } from "./scoreboard/EntryType.js";
declare const Utils: (typeof YoniUtils);
declare const Yoni: {
    isDebug: () => boolean;
    injectGlobal: boolean;
    debug: boolean;
};
declare const Vanilla: {
    Minecraft: typeof Minecraft;
    MinecraftGui: typeof MinecraftGui;
    Gametest: typeof Gametest;
    world: Minecraft.World;
    EventTypes: Minecraft.Events;
    Scoreboard: Minecraft.Scoreboard;
};
export { YoniPlayer, YoniEntity, YoniSimulatedPlayer, YoniDimension, EntryValueType, EntityValue, };
export { EventTypes, EventListener, EventSignal, events, Scoreboard, Objective, Entry, ScoreboardAccessor, EntryType, World, Dimension, system, dim, Minecraft, MinecraftGui, Gametest, VanillaWorld, VanillaEvents, VanillaScoreboard, runTask, Logger, log, console, Location, DimensionLikeValue, Vector3, ILocation, YoniScheduler, Schedule, Command, ChatCommand, EntityBase, Player, Entity, SimulatedPlayer, Utils, Yoni, ObjectUtils, Vanilla, };
